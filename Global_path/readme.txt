%本代码可求解双足爬壁机器人的全局路径，包括过渡性判断，全局壁面序列搜索和过渡落足点优化求解，将环境中的全部壁面数据作为输入，再用图形几何的方法求解两壁面间可过渡性，输出可过渡性的邻接矩阵，
  再输入起始壁面和目标壁面求解全局壁面序列，以全局壁面序列中的壁面数据作输入，优化求解最优的过渡落足点
 
input_surfaces 环境中的壁面数据输入，首先必须有数据输入

transition_mat(  ) 根据壁面数据求解壁面可过渡性的邻接矩阵，有壁面数据后可直接运行

findPath_dsf(Graph, partialPath, destination, partialWeight) 根据可过渡性邻接矩阵求解起始壁面到目标壁面的全局壁面序列,输入邻接矩阵，起始壁面和目标壁面后可运行

Surface_se( num_sta,num_end ) 全局壁面序列的整合求解，输入为起始壁面和目标壁面

[A,num_point,num_sur,Pstart,Pend] = surfaces 运行可得到壁面落足点优化求解的输入，包括全局壁面序列的壁面数据，起始点和目标点（需要将全局壁面序列的壁面数据复制进去，一般不用直接运行）

optimize(x) 过渡落足点优化求解数学模型中的约束，壁面数量越多约束越多（不用直接运行）

min_dis(x) 过渡落足点优化求解数学模型中的目标函数，优化目标是路径长度最短（不用直接运行）

opti_solution  surfaces中有全局壁面序列的数据后即可运行，过渡落足点求解的数学模型，直接运行即可得到优化结果（不一定能成功求解到最优解）

plot_solution(x) 展示过渡落足优化求解的结果，输入是优化求解的结果

plot_surface 画全局壁面序列中的壁面和机器人（不用直接运行）

plot_surface2 画全局壁面序列中的壁面及障碍物

plot_surface3 画全局壁面序列中的壁面

opti_datacom( ) 计算落足点优化求解需要用的一些数据（一般不用，为提高计算时间可以用，效果不大）

surface_data() 输出全局壁面序列的壁面数据（一般不用）

