/*****************************************************************************
 *        SPLINE                                                             *
 *        SCUT, 2012                                                         *
 *        Author :                                                           *
 *        Version number :  0.10                                             *
 *        Date :            2012-03-24                                       *
 *****************************************************************************/
#include "TaskControl.h"
#include "Setup.h"
#include <math.h>



#define POS_NUM  21

SplineStruct g_P[POS_NUM];

void Set_SplineData()
{
	int i;
	for(i=0; i<POS_NUM; i++)
	{
		g_P[i].T = 1000; // ms
		g_P[i].Line = i+1; // 行号
	}

	// 第一点
g_P[0].P[0] = 0.000;
g_P[0].P[1] =-0.373;
g_P[0].P[2] =0.524;
g_P[0].P[3] =-0.151;
g_P[0].P[4] =0.000;
g_P[0].V[0] = 0.000;
g_P[0].V[1] =0.000;
g_P[0].V[2] =0.000;
g_P[0].V[3] =0.000;
g_P[0].V[4] =0.000;
g_P[0].A[0] = -0.004;
g_P[0].A[1] =-0.069;
g_P[0].A[2] =0.128;
g_P[0].A[3] =-0.059;
g_P[0].A[4] =0.000;

	// 2
g_P[1].P[0] = -0.103;
g_P[1].P[1] =-0.686;
g_P[1].P[2] =0.977;
g_P[1].P[3] =-0.291;
g_P[1].P[4] =0.000;
g_P[1].V[0] = -0.097;
g_P[1].V[1] =-0.210;
g_P[1].V[2] =0.262;
g_P[1].V[3] =-0.052;
g_P[1].V[4] =0.000;
g_P[1].A[0] = -0.061;
g_P[1].A[1] =-0.071;
g_P[1].A[2] =0.047;
g_P[1].A[3] =0.025;
g_P[1].A[4] =0.000;


	// 3
g_P[2].P[0] = -0.221;
g_P[2].P[1] =-0.907;
g_P[2].P[2] =1.232;
g_P[2].P[3] =-0.325;
g_P[2].P[4] =0.000;
g_P[2].V[0] = -0.130;
g_P[2].V[1] =-0.208;
g_P[2].V[2] =0.217;
g_P[2].V[3] =-0.009;
g_P[2].V[4] =0.000;
g_P[2].A[0] = -0.005;
g_P[2].A[1] =0.075;
g_P[2].A[2] =-0.137;
g_P[2].A[3] =0.061;
g_P[2].A[4] =0.000;
	

	// 4
g_P[3].P[0] = -0.356;
g_P[3].P[1] =-1.087;
g_P[3].P[2] =1.395;
g_P[3].P[3] =-0.309;
g_P[3].P[4] =0.000;
g_P[3].V[0] = -0.143;
g_P[3].V[1] =-0.159;
g_P[3].V[2] =0.125;
g_P[3].V[3] =0.034;
g_P[3].V[4] =0.000;
g_P[3].A[0] = -0.021;
g_P[3].A[1] =0.023;
g_P[3].A[2] =-0.047;
g_P[3].A[3] =0.024;
g_P[3].A[4] =0.000;

	// 5
g_P[4].P[0] = -0.508;
g_P[4].P[1] =-1.232;
g_P[4].P[2] =1.496;
g_P[4].P[3] =-0.265;
g_P[4].P[4] =0.000;
g_P[4].V[0] = -0.161;
g_P[4].V[1] =-0.129;
g_P[4].V[2] =0.076;
g_P[4].V[3] =0.053;
g_P[4].V[4] =0.000;
g_P[4].A[0] = -0.015;
g_P[4].A[1] =0.036;
g_P[4].A[2] =-0.051;
g_P[4].A[3] =0.015;
g_P[4].A[4] =0.000;

	// 6
g_P[5].P[0] = -0.676;
g_P[5].P[1] =-1.344;
g_P[5].P[2] =1.550;
g_P[5].P[3] =-0.206;
g_P[5].P[4] =0.000;
g_P[5].V[0] = -0.175;
g_P[5].V[1] =-0.095;
g_P[5].V[2] =0.034;
g_P[5].V[3] =0.061;
g_P[5].V[4] =0.000;
g_P[5].A[0] = -0.013;
g_P[5].A[1] =0.033;
g_P[5].A[2] =-0.034;
g_P[5].A[3] =0.002;
g_P[5].A[4] =0.000;

	// 7
g_P[6].P[0] = -0.856;
g_P[6].P[1] =-1.423;
g_P[6].P[2] =1.568;
g_P[6].P[3] =-0.145;
g_P[6].P[4] =0.000;
g_P[6].V[0] = -0.185;
g_P[6].V[1] =-0.063;
g_P[6].V[2] =0.004;
g_P[6].V[3] =0.059;
g_P[6].V[4] =0.000;
g_P[6].A[0] = -0.007;
g_P[6].A[1] =0.032;
g_P[6].A[2] =-0.025;
g_P[6].A[3] =-0.006;
g_P[6].A[4] =0.000;

	// 8
g_P[7].P[0] = -1.043;
g_P[7].P[1] =-1.471;
g_P[7].P[2] =1.562;
g_P[7].P[3] =-0.090;
g_P[7].P[4] =0.000;
g_P[7].V[0] = -0.188;
g_P[7].V[1] =-0.034;
g_P[7].V[2] =-0.016;
g_P[7].V[3] =0.050;
g_P[7].V[4] =0.000;
g_P[7].A[0] = -0.001;
g_P[7].A[1] =0.027;
g_P[7].A[2] =-0.015;
g_P[7].A[3] =-0.012;
g_P[7].A[4] =0.000;

	// 9
g_P[8].P[0] = -1.231;
g_P[8].P[1] =-1.492;
g_P[8].P[2] =1.539;
g_P[8].P[3] =-0.047;
g_P[8].P[4] =0.000;
g_P[8].V[0] = -0.186;
g_P[8].V[1] =-0.010;
g_P[8].V[2] =-0.027;
g_P[8].V[3] =0.037;
g_P[8].V[4] =0.000;
g_P[8].A[0] = 0.004;
g_P[8].A[1] =0.021;
g_P[8].A[2] =-0.007;
g_P[8].A[3] =-0.014;
g_P[8].A[4] =0.000;

	// 10
g_P[9].P[0] = -1.415;
g_P[9].P[1] =-1.492;
g_P[9].P[2] =1.510;
g_P[9].P[3] =-0.018;
g_P[9].P[4] =0.000;
g_P[9].V[0] = -0.181;
g_P[9].V[1] =0.009;
g_P[9].V[2] =-0.031;
g_P[9].V[3] =0.022;
g_P[9].V[4] =0.000;
g_P[9].A[0] = 0.007;
g_P[9].A[1] =0.016;
g_P[9].A[2] =0.000;
g_P[9].A[3] =-0.016;
g_P[9].A[4] =0.000;

	// 11
g_P[10].P[0] = -1.592;
g_P[10].P[1] =-1.477;
g_P[10].P[2] =1.480;
g_P[10].P[3] =-0.004;
g_P[10].P[4] =0.000;
g_P[10].V[0] = -0.173;
g_P[10].V[1] =0.022;
g_P[10].V[2] =-0.028;
g_P[10].V[3] =0.006;
g_P[10].V[4] =0.000;
g_P[10].A[0] = 0.008;
g_P[10].A[1] =0.011;
g_P[10].A[2] =0.005;
g_P[10].A[3] =-0.016;
g_P[10].A[4] =0.000;

	// 12
g_P[11].P[0] = -1.762;
g_P[11].P[1] =-1.449;
g_P[11].P[2] =1.455;
g_P[11].P[3] =-0.006;
g_P[11].P[4] =0.000;
g_P[11].V[0] = -0.166;
g_P[11].V[1] =0.032;
g_P[11].V[2] =-0.021;
g_P[11].V[3] =-0.010;
g_P[11].V[4] =0.000;
g_P[11].A[0] = 0.006;
g_P[11].A[1] =0.009;
g_P[11].A[2] =0.008;
g_P[11].A[3] =-0.017;
g_P[11].A[4] =0.000;

	// 13
g_P[12].P[0] = -1.925;
g_P[12].P[1] =-1.413;
g_P[12].P[2] =1.438;
g_P[12].P[3] =-0.025;
g_P[12].P[4] =0.000;
g_P[12].V[0] = -0.161;
g_P[12].V[1] =0.040;
g_P[12].V[2] =-0.013;
g_P[12].V[3] =-0.027;
g_P[12].V[4] =0.000;
g_P[12].A[0] = 0.005;
g_P[12].A[1] =0.008;
g_P[12].A[2] =0.008;
g_P[12].A[3] =-0.017;
g_P[12].A[4] =0.000;


	// 14
g_P[13].P[0] = -2.084;
g_P[13].P[1] =-1.369;
g_P[13].P[2] =1.429;
g_P[13].P[3] =-0.060;
g_P[13].P[4] =0.000;
g_P[13].V[0] = -0.157;
g_P[13].V[1] =0.050;
g_P[13].V[2] =-0.006;
g_P[13].V[3] =-0.043;
g_P[13].V[4] =0.000;
g_P[13].A[0] = 0.003;
g_P[13].A[1] =0.011;
g_P[13].A[2] =0.005;
g_P[13].A[3] =-0.016;
g_P[13].A[4] =0.000;

	// 15
g_P[14].P[0] = -2.241;
g_P[14].P[1] =-1.313;
g_P[14].P[2] =1.424;
g_P[14].P[3] =-0.111;
g_P[14].P[4] =0.000;
g_P[14].V[0] = -0.156;
g_P[14].V[1] =0.063;
g_P[14].V[2] =-0.004;
g_P[14].V[3] =-0.058;
g_P[14].V[4] =0.000;
g_P[14].A[0] = 0.001;
g_P[14].A[1] =0.015;
g_P[14].A[2] =-0.001;
g_P[14].A[3] =-0.014;
g_P[14].A[4] =0.000;

	// 16
g_P[15].P[0] = -2.396;
g_P[15].P[1] =-1.242;
g_P[15].P[2] =1.417;
g_P[15].P[3] =-0.176;
g_P[15].P[4] =0.000;
g_P[15].V[0] = -0.155;
g_P[15].V[1] =0.081;
g_P[15].V[2] =-0.010;
g_P[15].V[3] =-0.071;
g_P[15].V[4] =0.000;
g_P[15].A[0] = 0.001;
g_P[15].A[1] =0.021;
g_P[15].A[2] =-0.011;
g_P[15].A[3] =-0.010;
g_P[15].A[4] =0.000;


	// 17
g_P[16].P[0] = -2.550;
g_P[16].P[1] =-1.149;
g_P[16].P[2] =1.399;
g_P[16].P[3] =-0.250;
g_P[16].P[4] =0.000;
g_P[16].V[0] = -0.154;
g_P[16].V[1] =0.107;
g_P[16].V[2] =-0.031;
g_P[16].V[3] =-0.077;
g_P[16].V[4] =0.000;
g_P[16].A[0] = -0.000;
g_P[16].A[1] =0.032;
g_P[16].A[2] =-0.030;
g_P[16].A[3] =-0.002;
g_P[16].A[4] =0.000;

	// 18
g_P[17].P[0] = -2.703;
g_P[17].P[1] =-1.026;
g_P[17].P[2] =1.352;
g_P[17].P[3] =-0.326;
g_P[17].P[4] =0.000;
g_P[17].V[0] = -0.151;
g_P[17].V[1] =0.137;
g_P[17].V[2] =-0.064;
g_P[17].V[3] =-0.073;
g_P[17].V[4] =0.000;
g_P[17].A[0] = 0.007;
g_P[17].A[1] =0.027;
g_P[17].A[2] =-0.036;
g_P[17].A[3] =0.009;
g_P[17].A[4] =0.000;

	// 19
g_P[18].P[0] = -2.855;
g_P[18].P[1] =-0.866;
g_P[18].P[2] =1.256;
g_P[18].P[3] =-0.390;
g_P[18].P[4] =0.000;
g_P[18].V[0] = -0.154;
g_P[18].V[1] =0.193;
g_P[18].V[2] =-0.143;
g_P[18].V[3] =-0.050;
g_P[18].V[4] =0.000;
g_P[18].A[0] = -0.014;
g_P[18].A[1] =0.085;
g_P[18].A[2] =-0.123;
g_P[18].A[3] =0.038;
g_P[18].A[4] =0.000;

	// 20
g_P[19].P[0] = -3.001;
g_P[19].P[1] =-0.657;
g_P[19].P[2] =1.077;
g_P[19].P[3] =-0.420;
g_P[19].P[4] =0.000;
g_P[19].V[0] = -0.125;
g_P[19].V[1] =0.199;
g_P[19].V[2] =-0.191;
g_P[19].V[3] =-0.008;
g_P[19].V[4] =0.000;
g_P[19].A[0] = 0.073;
g_P[19].A[1] =-0.072;
g_P[19].A[2] =0.026;
g_P[19].A[3] =0.046;
g_P[19].A[4] =0.000;

	// 21
g_P[20].P[0] = -3.142;
g_P[20].P[1] =-0.367;
g_P[20].P[2] =0.734;
g_P[20].P[3] =-0.367;
g_P[20].P[4] =0.000;
g_P[20].V[0] = 0.000;
g_P[20].V[1] =0.000;
g_P[20].V[2] =0.000;
g_P[20].V[3] =-0.000;
g_P[20].V[4] =0.000;
g_P[20].A[0] = 0.010;
g_P[20].A[1] =-0.061;
g_P[20].A[2] =0.101;
g_P[20].A[3] =-0.040;
g_P[20].A[4] =0.000;
}

void MOV_Spline_Control()
{
	int li_flagplan;
	double pos[5];
	double vel = MAX_AUTOVEL_JOINT * 0.2;
	double acc = MAX_AUTOACC_JOINT;
	double jerk = MAX_JERK_JOINT;
	int i;
	
	std::deque<SplineStruct> splineDeque; // Spline插补数据队列
	SplineStruct splineData; // Spline插补数据
	
	Set_SplineData();
	
	
	// MOVJ - 第一点
	for(i=0; i<JOINT_NUM; i++)
		pos[i] = 0;
	Robot::I_Task.Set_RunState(FLAG_RUNNING);
	li_flagplan = Robot::I_Servo.Servo_PTPLink(pos,vel,acc,jerk);
	if(Ok != li_flagplan)
		Robot::I_Task.Task_RunErrStop(li_flagplan);
	
	
	// MOVS
	splineDeque.clear();
	
	for(i=0; i<2; i++)
	{
		splineData = g_P[i];
		splineDeque.push_back(splineData);	
	}
	
	
	li_flagplan = Robot::I_Task.m_iInterp.Plan_Spline(&splineDeque);
	
	if(Ok == li_flagplan) // 规划成功
	{
		// 运动
		Robot::I_Task.Set_RunState(FLAG_RUNNING);
		Robot::I_Task.Set_CurrLine(1);
		li_flagplan = Robot::I_Servo.Servo_InterpLink(Robot::I_Task.m_iInterp.m_iPath);				
	}
	if(Ok != li_flagplan)
	{
		Robot::I_Task.Task_RunErrStop(li_flagplan);
	}
}